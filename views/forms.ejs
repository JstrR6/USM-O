<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> | Military Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .folder {
            transition: transform 0.2s, box-shadow 0.2s;
        }
        .folder:hover {
            transform: scale(1.05);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }
        .folder-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 1.5rem;
        }
        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 1rem;
        }
    </style>
</head>
<body class="bg-gray-100">
    <div class="min-h-screen flex">
        <!-- Sidebar -->
        <div class="bg-gray-800 text-white w-64 py-6 flex flex-col">
            <div class="px-6 py-4">
                <h1 class="text-2xl font-semibold">Military Portal</h1>
            </div>
            <!-- Navigation -->
            <nav class="flex-1 px-4 mt-6">
                <a href="/dashboard" class="flex items-center px-4 py-3 text-gray-300 hover:bg-gray-700 rounded-lg">
                    <i class="fas fa-home w-5 h-5 mr-3"></i>
                    Dashboard
                </a>
                <a href="/forms" class="flex items-center px-4 py-3 mt-2 text-gray-300 hover:bg-gray-700 rounded-lg">
                    <i class="fas fa-user w-5 h-5 mr-3"></i>
                    Forms
                </a>
                <a href="/profile" class="flex items-center px-4 py-3 mt-2 text-gray-300 bg-gray-700 rounded-lg">
                    <i class="fas fa-file-alt w-5 h-5 mr-3"></i>
                    Profile
                </a>
                <a href="/members" class="flex items-center px-4 py-3 mt-2 text-gray-300 hover:bg-gray-700 rounded-lg">
                    <i class="fas fa-users w-5 h-5 mr-3"></i>
                    Members
                </a>
            </nav>
            <!-- User Info -->
            <div class="px-6 py-4 border-t border-gray-700">
                <div class="flex items-center">
                    <div class="ml-3">
                        <p class="text-sm font-medium"><%= user.username %></p>
                        <p class="text-xs text-gray-400"><%= user.highestRole %></p>
                    </div>
                </div>
                <a href="/logout" class="mt-4 block px-4 py-2 text-center text-sm text-white bg-red-600 hover:bg-red-700 rounded-lg">
                    Logout
                </a>
            </div>
        </div>

        <!-- Main Content -->
        <div class="flex-1">
            <!-- Top Navigation -->
            <header class="bg-white shadow-sm">
                <div class="px-6 py-4">
                    <h2 class="text-xl font-semibold text-gray-800">Forms</h2>
                </div>
            </header>

            <!-- Main Content Area -->
            <main class="p-6">
                <div class="folder-grid">
                    <!-- Officer Folder - Visible to Officers -->
                    <% if (user.isOfficer) { %>
                    <div class="folder bg-white rounded-lg p-4 text-center cursor-pointer" onclick="toggleForms('officer-forms')">
                        <div class="mb-2 text-blue-600">
                            <i class="fas fa-folder text-5xl"></i>
                        </div>
                        <h3 class="font-semibold">Officer Forms</h3>
                    </div>
                    <% } %>

                    <!-- Senior NCO Folder - Visible to Senior NCOs and Officers -->
                    <% if (user.isSenior || user.isOfficer) { %>
                    <div class="folder bg-white rounded-lg p-4 text-center cursor-pointer" onclick="toggleForms('senior-forms')">
                        <div class="mb-2 text-green-600">
                            <i class="fas fa-folder text-5xl"></i>
                        </div>
                        <h3 class="font-semibold">Senior NCO Forms</h3>
                    </div>
                    <% } %>

                    <!-- Instructor Folder - Visible to Instructors, Senior NCOs, and Officers -->
                    <% if (user.isInstructor || user.isSenior || user.isOfficer) { %>
                    <div class="folder bg-white rounded-lg p-4 text-center cursor-pointer" onclick="toggleForms('instructor-forms')">
                        <div class="mb-2 text-yellow-600">
                            <i class="fas fa-folder text-5xl"></i>
                        </div>
                        <h3 class="font-semibold">Instructor Forms</h3>
                    </div>
                    <% } %>

                    <!-- Recruiter Folder - Visible to Recruiters and above -->
                    <% if (user.isRecruiter || user.isInstructor || user.isSenior || user.isOfficer) { %>
                    <div class="folder bg-white rounded-lg p-4 text-center cursor-pointer" onclick="toggleForms('recruiter-forms')">
                        <div class="mb-2 text-purple-600">
                            <i class="fas fa-folder text-5xl"></i>
                        </div>
                        <h3 class="font-semibold">Recruiter Forms</h3>
                    </div>
                    <% } %>
                </div>

                <!-- Forms Sections (Hidden by default) -->
                <div id="officer-forms" class="hidden mt-6">
                    <div class="bg-white rounded-lg p-6">
                        <h3 class="text-lg font-semibold mb-4">Officer Forms</h3>
                        <div class="form-grid">
                            <!-- Pending Promotions -->
                            <div class="bg-gray-50 rounded-lg p-4 text-center hover:bg-gray-100 cursor-pointer" 
                                 onclick="openPendingPromotions()">
                                <i class="fas fa-medal text-2xl text-blue-600 mb-2"></i>
                                <p class="text-sm">Pending Promotions</p>
                            </div>
                            <!-- Promotion Logs -->
                            <div class="bg-gray-50 rounded-lg p-4 text-center hover:bg-gray-100 cursor-pointer" 
                                 onclick="openPromotionLogs()">
                                <i class="fas fa-history text-2xl text-blue-600 mb-2"></i>
                                <p class="text-sm">Promotion Logs</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Senior NCO Forms Section -->
                <div id="senior-forms" class="hidden mt-6">
                    <div class="bg-white rounded-lg p-6">
                        <h3 class="text-lg font-semibold mb-4">Senior NCO Forms</h3>
                        <div class="form-grid">
                            <div class="bg-gray-50 rounded-lg p-4 text-center hover:bg-gray-100 cursor-pointer" 
                                onclick="openPromotionForm()">
                                <i class="fas fa-medal text-2xl text-green-600 mb-2"></i>
                                <p class="text-sm">Promotion Request</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="instructor-forms" class="hidden mt-6">
                    <div class="bg-white rounded-lg p-6">
                        <h3 class="text-lg font-semibold mb-4">Instructor Forms</h3>
                        <div class="form-grid">
                            <a href="#" class="bg-gray-50 rounded-lg p-4 text-center hover:bg-gray-100">
                                <i class="fas fa-file-alt text-2xl text-yellow-600 mb-2"></i>
                                <p class="text-sm">Course Request</p>
                            </a>
                            <a href="#" class="bg-gray-50 rounded-lg p-4 text-center hover:bg-gray-100">
                                <i class="fas fa-file-alt text-2xl text-yellow-600 mb-2"></i>
                                <p class="text-sm">Training Schedule</p>
                            </a>
                        </div>
                    </div>
                </div>

                <div id="recruiter-forms" class="hidden mt-6">
                    <div class="bg-white rounded-lg p-6">
                        <h3 class="text-lg font-semibold mb-4">Recruiter Forms</h3>
                        <div class="form-grid">
                            <a href="#" class="bg-gray-50 rounded-lg p-4 text-center hover:bg-gray-100">
                                <i class="fas fa-file-alt text-2xl text-purple-600 mb-2"></i>
                                <p class="text-sm">Recruit Application</p>
                            </a>
                            <a href="#" class="bg-gray-50 rounded-lg p-4 text-center hover:bg-gray-100">
                                <i class="fas fa-file-alt text-2xl text-purple-600 mb-2"></i>
                                <p class="text-sm">Interview Form</p>
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Senior NCO Promotion Form -->
                <div id="promotionModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden overflow-y-auto h-full w-full">
                    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
                        <div class="mt-3">
                            <h3 class="text-lg font-medium text-gray-900 mb-4">Promotion Request</h3>
                            
                            <!-- Step 1: Username Input -->
                            <div id="step1" class="mb-4">
                                <label class="block text-sm font-medium text-gray-700 mb-2">Enter Username</label>
                                <div class="flex gap-2">
                                    <input type="text" id="usernameInput" 
                                           class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                                    <button onclick="checkUser()" 
                                            class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
                                        Next
                                    </button>
                                </div>
                            </div>
                
                            <!-- Step 2: Promotion Details -->
                            <div id="step2" class="hidden">
                                <div class="mb-4">
                                    <p class="text-sm font-medium text-gray-700">Promoting: <span id="selectedUser" class="font-bold"></span></p>
                                    <p class="text-sm text-gray-600">Current Rank: <span id="currentRank" class="font-medium"></span></p>
                                </div>
                                
                                <div class="mb-4">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Promote To</label>
                                    <select id="promotionRank" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                                    </select>
                                </div>
                
                                <div class="mb-4">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Reason for Promotion</label>
                                    <textarea id="promotionReason" rows="3" 
                                            class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"></textarea>
                                </div>
                
                                <div class="mb-4" id="officerApprovalNote" class="hidden">
                                    <p class="text-sm text-red-600">* This promotion will require Officer approval</p>
                                </div>
                
                                <div class="flex justify-end gap-2">
                                    <button onclick="closePromotionModal()" 
                                            class="px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300">
                                        Cancel
                                    </button>
                                    <button onclick="submitPromotion()" 
                                            class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700">
                                        Submit Promotion
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Pending Promotions Modal -->
                <div id="pendingPromotionsModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden overflow-y-auto h-full w-full">
                    <div class="relative top-20 mx-auto p-5 border w-3/4 max-w-4xl shadow-lg rounded-md bg-white">
                        <div class="flex justify-between items-center mb-4">
                            <h3 class="text-xl font-semibold text-gray-900">Pending Promotions</h3>
                            <button onclick="closePendingPromotions()" class="text-gray-500 hover:text-gray-700">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                        
                        <div id="pendingPromotionsList" class="space-y-4">
                            <!-- Pending promotions will be populated here -->
                        </div>
                    </div>
                </div>

                <!-- Promotion Logs Modal -->
                <div id="promotionLogsModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden overflow-y-auto h-full w-full">
                    <div class="relative top-20 mx-auto p-5 border w-3/4 max-w-4xl shadow-lg rounded-md bg-white">
                        <div class="flex justify-between items-center mb-4">
                            <h3 class="text-xl font-semibold text-gray-900">Promotion Logs</h3>
                            <button onclick="closePromotionLogs()" class="text-gray-500 hover:text-gray-700">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                        
                        <div class="mb-4">
                            <input type="text" id="logSearch" placeholder="Search promotions..." 
                                class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                                onkeyup="filterPromotionLogs()">
                        </div>
                        
                        <div class="overflow-x-auto">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">From Rank</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">To Rank</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Details</th>
                                    </tr>
                                </thead>
                                <tbody id="promotionLogsBody" class="bg-white divide-y divide-gray-200">
                                    <!-- Promotion logs will be populated here -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Reject Promotion Modal -->
                <div id="rejectModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden overflow-y-auto h-full w-full">
                    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">Reject Promotion</h3>
                        <textarea id="rejectReason" rows="3" placeholder="Enter reason for rejection..."
                                class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 mb-4"></textarea>
                        <div class="flex justify-end gap-2">
                            <button onclick="closeRejectModal()" 
                                    class="px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300">Cancel</button>
                            <button onclick="submitRejection()" 
                                    class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700">Submit</button>
                        </div>
                    </div>
                </div>

                <script>
                    const RANK_ORDER = [
                    'Citizen',                    // Lowest rank
                    'Private',
                    'Private First Class',
                    'Specialist',
                    'Corporal',
                    'Sergeant',
                    'Staff Sergeant',
                    'Sergeant First Class',
                    'Master Sergeant',
                    'First Sergeant',
                    'Sergeant Major',
                    'Command Sergeant Major',
                    'Sergeant Major of the Army',
                    'Second Lieutenant',
                    'First Lieutenant',
                    'Captain',
                    'Major',
                    'Lieutenant Colonel',
                    'Colonel',
                    'Brigadier General',
                    'Major General',
                    'Lieutenant General',
                    'General',
                    'General of the Army'
                ];

                let selectedUserId = null;
                let currentUserRank = '<%= user.highestRole %>';

                function openPromotionForm() {
                    document.getElementById('promotionModal').classList.remove('hidden');
                    document.getElementById('step1').classList.remove('hidden');
                    document.getElementById('step2').classList.add('hidden');
                    document.getElementById('usernameInput').value = '';
                }

                function closePromotionModal() {
                    document.getElementById('promotionModal').classList.add('hidden');
                }

                function checkUser() {
                    const username = document.getElementById('usernameInput').value;
                    
                    // Make API call to check user
                    fetch(`/api/users/check?username=${username}`)
                        .then(response => response.json())
                        .then(data => {
                            if (data.user) {
                                selectedUserId = data.user._id;
                                showPromotionDetails(data.user);
                            } else {
                                alert('User not found');
                            }
                        });
                }

                function showPromotionDetails(user) {
                    console.log('Showing promotion details for:', user);
                    document.getElementById('step1').classList.add('hidden');
                    document.getElementById('step2').classList.remove('hidden');
                    
                    document.getElementById('selectedUser').textContent = user.username;
                    document.getElementById('currentRank').textContent = user.highestRole;
                    
                    // Populate rank dropdown
                    const selectElement = document.getElementById('promotionRank');
                    selectElement.innerHTML = '';
                    
                    console.log('Current user rank:', currentUserRank);
                    console.log('Target user current rank:', user.highestRole);
                    
                    const currentRankIndex = RANK_ORDER.indexOf(user.highestRole);
                    const maxRankIndex = RANK_ORDER.indexOf(currentUserRank);

                    console.log('Current rank index:', currentRankIndex);
                    console.log('Max rank index:', maxRankIndex);

                    // Add default option
                    const defaultOption = document.createElement('option');
                    defaultOption.value = '';
                    defaultOption.textContent = 'Select Rank';
                    defaultOption.selected = true;
                    defaultOption.disabled = true;
                    selectElement.appendChild(defaultOption);
                    
                    // Add rank options
                    for (let i = currentRankIndex + 1; i <= maxRankIndex; i++) {
                        const option = document.createElement('option');
                        option.value = RANK_ORDER[i];
                        option.textContent = RANK_ORDER[i];
                        selectElement.appendChild(option);
                        console.log('Added rank option:', RANK_ORDER[i]);
                    }

                    // Update officer approval note visibility
                    selectElement.addEventListener('change', function() {
                        const selectedRank = this.value;
                        const needsOfficerApproval = ['Master Sergeant', 'First Sergeant', 'Sergeant Major', 
                            'Command Sergeant Major', 'Sergeant Major of the Army'].includes(selectedRank);
                        
                        const officerNote = document.getElementById('officerApprovalNote');
                        if (needsOfficerApproval) {
                            officerNote.classList.remove('hidden');
                        } else {
                            officerNote.classList.add('hidden');
                        }
                    });
                }

                function submitPromotion() {
                    const promotionRank = document.getElementById('promotionRank').value;
                    const reason = document.getElementById('promotionReason').value;

                    if (!promotionRank) {
                        alert('Please select a rank');
                        return;
                    }

                    if (!reason) {
                        alert('Please provide a reason for promotion');
                        return;
                    }

                    const needsOfficerApproval = ['Master Sergeant', 'First Sergeant', 'Sergeant Major', 
                        'Command Sergeant Major', 'Sergeant Major of the Army'].includes(promotionRank);

                    const promotionData = {
                        userId: selectedUserId,
                        promotionRank: promotionRank,
                        reason: reason,
                        needsOfficerApproval: needsOfficerApproval
                    };

                    fetch('/api/promotions', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(promotionData)
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert(`Promotion request submitted successfully${needsOfficerApproval ? ' and pending officer approval' : ''}`);
                            closePromotionModal();
                        } else {
                            alert('Error submitting promotion request');
                        }
                    });
                }
                    function toggleForms(formId) {
                        // Hide all form sections first
                        document.querySelectorAll('[id$="-forms"]').forEach(section => {
                            section.classList.add('hidden');
                        });
                        // Show the selected section
                        document.getElementById(formId).classList.remove('hidden');
                    }

                    
                    let currentPromotionId = null;

                    function openPendingPromotions() {
                        document.getElementById('pendingPromotionsModal').classList.remove('hidden');
                        loadPendingPromotions();
                    }

                    function closePendingPromotions() {
                        document.getElementById('pendingPromotionsModal').classList.add('hidden');
                    }

                    function openPromotionLogs() {
                        document.getElementById('promotionLogsModal').classList.remove('hidden');
                        loadPromotionLogs();
                    }

                    function closePromotionLogs() {
                        document.getElementById('promotionLogsModal').classList.add('hidden');
                    }

                    function loadPendingPromotions() {
                        fetch('/api/promotions/pending')
                            .then(response => response.json())
                            .then(data => {
                                const container = document.getElementById('pendingPromotionsList');
                                container.innerHTML = '';

                                data.promotions.forEach(promotion => {
                                    container.innerHTML += `
                                        <div class="bg-gray-50 p-4 rounded-lg">
                                            <div class="flex justify-between items-start">
                                                <div>
                                                    <p class="font-semibold">${promotion.targetUser.username}</p>
                                                    <p class="text-sm text-gray-600">Current Rank: ${promotion.currentRank}</p>
                                                    <p class="text-sm text-gray-600">Proposed Rank: ${promotion.promotionRank}</p>
                                                    <p class="text-sm text-gray-600">Requested by: ${promotion.promotedBy.username}</p>
                                                    <p class="mt-2">Reason: ${promotion.reason}</p>
                                                </div>
                                                <div class="space-x-2">
                                                    <button onclick="approvePromotion('${promotion._id}')" 
                                                            class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700">
                                                        Approve
                                                    </button>
                                                    <button onclick="openRejectModal('${promotion._id}')" 
                                                            class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700">
                                                        Reject
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    `;
                                });

                                if (data.promotions.length === 0) {
                                    container.innerHTML = '<p class="text-center text-gray-500">No pending promotions</p>';
                                }
                            });
                    }

                    function loadPromotionLogs() {
                        fetch('/api/promotions/logs')
                            .then(response => response.json())
                            .then(data => {
                                const tbody = document.getElementById('promotionLogsBody');
                                tbody.innerHTML = '';

                                data.promotions.forEach(promotion => {
                                    const date = new Date(promotion.createdAt).toLocaleDateString();
                                    const statusClass = {
                                        'approved': 'text-green-600',
                                        'rejected': 'text-red-600',
                                        'pending': 'text-yellow-600'
                                    }[promotion.status];

                                    tbody.innerHTML += `
                                        <tr>
                                            <td class="px-6 py-4 whitespace-nowrap">${date}</td>
                                            <td class="px-6 py-4 whitespace-nowrap">${promotion.targetUser.username}</td>
                                            <td class="px-6 py-4 whitespace-nowrap">${promotion.currentRank}</td>
                                            <td class="px-6 py-4 whitespace-nowrap">${promotion.promotionRank}</td>
                                            <td class="px-6 py-4 whitespace-nowrap">
                                                <span class="${statusClass} font-medium">${promotion.status}</span>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap">
                                                <button onclick="showPromotionDetails('${promotion._id}')" 
                                                        class="text-blue-600 hover:text-blue-800">
                                                    View Details
                                                </button>
                                            </td>
                                        </tr>
                                    `;
                                });
                            });
                    }

                    function openRejectModal(promotionId) {
                        currentPromotionId = promotionId;
                        document.getElementById('rejectModal').classList.remove('hidden');
                    }

                    function closeRejectModal() {
                        document.getElementById('rejectModal').classList.add('hidden');
                        document.getElementById('rejectReason').value = '';
                        currentPromotionId = null;
                    }

                    function approvePromotion(promotionId) {
                        fetch(`/api/promotions/${promotionId}/approve`, {
                            method: 'POST'
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                loadPendingPromotions();
                            } else {
                                alert('Error approving promotion');
                            }
                        });
                    }

                    function submitRejection() {
                        const reason = document.getElementById('rejectReason').value;
                        if (!reason) {
                            alert('Please enter a reason for rejection');
                            return;
                        }

                        fetch(`/api/promotions/${currentPromotionId}/reject`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ reason })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                closeRejectModal();
                                loadPendingPromotions();
                            } else {
                                alert('Error rejecting promotion');
                            }
                        });
                    }

                    function filterPromotionLogs() {
                        const input = document.getElementById('logSearch').value.toLowerCase();
                        const rows = document.getElementById('promotionLogsBody').getElementsByTagName('tr');

                        for (let row of rows) {
                            const text = row.textContent.toLowerCase();
                            row.style.display = text.includes(input) ? '' : 'none';
                        }
                    }
                </script>
            </main>
        </div>
    </div>
</body>
</html>